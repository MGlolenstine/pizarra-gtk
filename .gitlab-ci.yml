stages:
  - build
  - upload
  - deploy

build:
  stage: build
  image: categulario/pizarra-ci-builds:1.0.1
  script:
    # build the binary
    - cargo build --locked --release
    # create the tar package
    - mkdir -p build
      # move things to the build directory
    - cp target/release/pizarra build/pizarra
    - cp res/icons/tk.categulario.pizarra.svg build/pizarra.svg
    - cp res/pizarra.desktop build/pizarra.desktop
    - cp CHANGELOG.md build/CHANGELOG.md
    - cp README.md build/README.md
    - cp LICENSE build/LICENSE
      # compress the tar file
    - tar -cvzf pizarra_${CI_COMMIT_TAG:1}_x86-64.tar.gz build/
      # makes the debian archive
    - ./debpackage.sh
      # computes the sums
    - sha256sum pizarra_${CI_COMMIT_TAG:1}_x86-64.tar.gz > pizarra_${CI_COMMIT_TAG:1}_x86-64.tar.gz.sum
    - sha256sum debian-package/pizarra_${CI_COMMIT_TAG:1}_amd64.deb > $pizarra_${CI_COMMIT_TAG:1}_amd64.deb.sum
  artifacts:
    paths:
      - pizarra_${CI_COMMIT_TAG:1}_x86-64.tar.gz
      - debian-package/pizarra_${CI_COMMIT_TAG:1}_amd64.deb
      - pizarra_${CI_COMMIT_TAG:1}_x86-64.tar.gz.sum
      - pizarra_${CI_COMMIT_TAG:1}_amd64.deb.sum
  only:
    - tags

upload:
  stage: upload
  image: kroniak/ssh-client
  script:
  - mkdir -p ~/.ssh
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$PRIVATE_KEY")
  - scp pizarra_${CI_COMMIT_TAG:1}_x86-64.tar.gz $SERVER_USER@$SERVER_HOST:$LINUX_RELEASE_PATH
  - scp pizarra_${CI_COMMIT_TAG:1}_x86-64.tar.gz.sum $SERVER_USER@$SERVER_HOST:$LINUX_RELEASE_PATH
  - scp debian-package/pizarra_${CI_COMMIT_TAG:1}_amd64.deb $SERVER_USER@$SERVER_HOST:$DEBIAN_RELEASE_PATH
  - scp debian-package/pizarra_${CI_COMMIT_TAG:1}_amd64.deb.sum $SERVER_USER@$SERVER_HOST:$DEBIAN_RELEASE_PATH
  only:
  - tags

    # deploy:arch-bin:
    #   stage: deploy
    #   image: bitnami/git
    #   script:
    #     - mkdir -p ~/.ssh
    #     - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    #     - eval $(ssh-agent -s)
    #     - ssh-add <(echo "$ARCH_PRIVATE_KEY")
